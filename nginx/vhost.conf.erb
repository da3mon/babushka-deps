<%# It'd be nice if this could be in the unicorn config instead, but it's only valid in the http{ } block. %>
upstream <%= upstream_name %> {
  # fail_timeout=0 means we always retry an upstream even if it failed to return a good
  # HTTP response (in case the Unicorn master nukes a single worker for timing out).
  server unix:<%= unicorn_socket %> fail_timeout=0;
}

server {
  listen <%= listen_host %>:<%= listen_port %>;
  charset utf-8;

  server_name <%= domain %> www.<%= domain %> <%= aliases %>;
  rewrite ^(.*)$ https://<%= domain %>$1 permanent;
}

server {
  listen <%= listen_host %>:443;
  charset utf-8;

  server_name <%= domain %> www.<%= domain %>;
  root <%= path / 'public' %>;

  if ($host !~ ^<%= domain.to_s.gsub('.', '\.') %>$) {
    rewrite ^(.*)$ https://<%= domain %>$1 permanent;
  }

  ssl                  on;
  ssl_certificate      certs/<%= domain %>.crt;
  ssl_certificate_key  certs/<%= domain %>.key;
  ssl_session_timeout  5m;

  location @app {
    proxy_pass           http://<%= upstream_name %>;
    proxy_redirect       off;

    proxy_buffer_size    64k;
    proxy_buffers        32 16k;
    client_max_body_size 128m;

    proxy_set_header     Host              $host;
    proxy_set_header     X-Real-IP         $remote_addr;
    proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header     X-Forwarded-Proto $scheme;
  }

  include vhosts/<%= domain %>.common;
}

server {
  listen <%= listen_host %>:443;
  charset utf-8;

  server_name <%= (0..3).to_a.map { |i| "assets#{i}.#{domain}" }.join(" ") %>;

  ssl                  on;
  ssl_certificate      certs/<%= domain %>.crt;
  ssl_certificate_key  certs/<%= domain %>.key;
  ssl_session_timeout  5m;

  location ~ ^/(assets)/  {
    root <%= path / 'public' %>;
    gzip_static on; # to serve pre-gzipped version
    gzip_vary on;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }
}

